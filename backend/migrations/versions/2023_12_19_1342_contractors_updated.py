"""contractors-updated

Revision ID: 5374596e60ce
Revises: e32c08903101
Create Date: 2023-12-19 13:42:51.286862

"""
import sqlalchemy as sa  # noqa: F401
import sqlmodel  # noqa: F401
from alembic import op
from app.shared.types import CircularServicesEnum

# revision identifiers, used by Alembic.
revision = "5374596e60ce"
down_revision = "e32c08903101"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    circular_service_type_table = op.create_table(
        "circular_service_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_circular_service_type_name"), "circular_service_type", ["name"], unique=True)
    op.bulk_insert(
        circular_service_type_table,
        [{"id": typeEnum.value[0], "name": typeEnum.value[1]} for typeEnum in CircularServicesEnum],
    )
    op.create_table(
        "contractor_to_circular_service_type",
        sa.Column("contractor_id", sa.Integer(), nullable=False),
        sa.Column("circular_service_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["circular_service_type_id"],
            ["circular_service_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["contractor_id"],
            ["contractor.id"],
        ),
        sa.PrimaryKeyConstraint("contractor_id", "circular_service_type_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("contractor_to_circular_service_type")
    op.drop_index(op.f("ix_circular_service_type_name"), table_name="circular_service_type")
    op.drop_table("circular_service_type")
    # ### end Alembic commands ###
