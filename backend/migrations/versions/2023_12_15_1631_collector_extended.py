"""collector-extended

Revision ID: a7c1b23d790b
Revises: 330c9ac7bfac
Create Date: 2023-12-15 16:31:10.500998

"""
import sqlalchemy as sa  # noqa: F401
import sqlmodel  # noqa: F401
from alembic import op

# revision identifiers, used by Alembic.
revision = "a7c1b23d790b"
down_revision = "330c9ac7bfac"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    collector_authorized_vehicle_type_table = op.create_table(
        "collector_authorized_vehicle_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_collector_authorized_vehicle_type_name"), "collector_authorized_vehicle_type", ["name"], unique=True
    )
    op.bulk_insert(
        collector_authorized_vehicle_type_table,
        [
            {"id": 1, "name": "Small Van (3 to 5 m³)"},
            {"id": 2, "name": "Medium Van (6 to 12 m³)"},
            {"id": 3, "name": "Flatbed Truck (Over 12 m³)"},
        ],
    )
    collector_material_recovery_type_table = op.create_table(
        "collector_material_recovery_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_collector_material_recovery_type_name"), "collector_material_recovery_type", ["name"], unique=True
    )
    op.bulk_insert(
        collector_material_recovery_type_table,
        [
            {"id": 1, "name": "Reuse"},
            {"id": 2, "name": "Recycling"},
            {"id": 3, "name": "Reparation"},
        ],
    )
    op.create_table(
        "collector_to_collector_authorized_vehicle_type",
        sa.Column("collector_id", sa.Integer(), nullable=False),
        sa.Column("collector_authorized_vehicle_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["collector_authorized_vehicle_type_id"],
            ["collector_authorized_vehicle_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["collector_id"],
            ["collector.id"],
        ),
        sa.PrimaryKeyConstraint("collector_id", "collector_authorized_vehicle_type_id"),
    )
    op.create_table(
        "collector_to_collector_material_recovery_type",
        sa.Column("collector_id", sa.Integer(), nullable=False),
        sa.Column("collector_material_recovery_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["collector_id"],
            ["collector.id"],
        ),
        sa.ForeignKeyConstraint(
            ["collector_material_recovery_type_id"],
            ["collector_material_recovery_type.id"],
        ),
        sa.PrimaryKeyConstraint("collector_id", "collector_material_recovery_type_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("collector_to_collector_material_recovery_type")
    op.drop_table("collector_to_collector_authorized_vehicle_type")
    op.drop_index(op.f("ix_collector_material_recovery_type_name"), table_name="collector_material_recovery_type")
    op.drop_table("collector_material_recovery_type")
    op.drop_index(op.f("ix_collector_authorized_vehicle_type_name"), table_name="collector_authorized_vehicle_type")
    op.drop_table("collector_authorized_vehicle_type")
    # ### end Alembic commands ###
